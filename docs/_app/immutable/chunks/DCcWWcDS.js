function k(){}function x(t,n){for(const e in n)t[e]=n[e];return t}function w(t){return t()}function z(){return Object.create(null)}function v(t){t.forEach(w)}function D(t){return typeof t=="function"}function F(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}function M(t){return Object.keys(t).length===0}function p(t,...n){if(t==null){for(const o of n)o(void 0);return k}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function P(t){let n;return p(t,e=>n=e)(),n}function S(t,n,e){t.$$.on_destroy.push(p(n,e))}function U(t,n,e,o){if(t){const u=b(t,n,e,o);return t[0](u)}}function b(t,n,e,o){return t[1]&&o?x(e.ctx.slice(),t[1](o(n))):e.ctx}function A(t,n,e,o){return t[2],n.dirty}function B(t,n,e,o,u,y){if(u){const m=b(n,e,o,y);t.p(m,u)}}function C(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let o=0;o<e;o++)n[o]=-1;return n}return-1}let a;function l(t){a=t}function _(){if(!a)throw new Error("Function called outside component initialization");return a}function G(t){_().$$.on_mount.push(t)}function H(t){_().$$.after_update.push(t)}function I(t){_().$$.on_destroy.push(t)}const r=[],h=[];let s=[];const d=[],g=Promise.resolve();let f=!1;function j(){f||(f=!0,g.then(O))}function J(){return j(),g}function E(t){s.push(t)}const i=new Set;let c=0;function O(){if(c!==0)return;const t=a;do{try{for(;c<r.length;){const n=r[c];c++,l(n),q(n.$$)}}catch(n){throw r.length=0,c=0,n}for(l(null),r.length=0,c=0;h.length;)h.pop()();for(let n=0;n<s.length;n+=1){const e=s[n];i.has(e)||(i.add(e),e())}s.length=0}while(r.length);for(;d.length;)d.pop()();f=!1,i.clear(),l(t)}function q(t){if(t.fragment!==null){t.update(),v(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(E)}}function K(t){const n=[],e=[];s.forEach(o=>t.indexOf(o)===-1?n.push(o):e.push(o)),e.forEach(o=>o()),s=n}export{H as a,h as b,S as c,M as d,a as e,z as f,O as g,l as h,D as i,K as j,E as k,w as l,r as m,k as n,G as o,j as p,I as q,v as r,F as s,J as t,U as u,B as v,C as w,A as x,P as y};
